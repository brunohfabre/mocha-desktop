/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as AuthLayoutRouteImport } from './pages/_auth/layout'
import { Route as AppLayoutRouteImport } from './pages/_app/layout'
import { Route as AppIndexRouteImport } from './pages/_app/index'
import { Route as AuthSignInRouteImport } from './pages/_auth/sign-in'
import { Route as AuthCallbackRouteImport } from './pages/_auth/callback'
import { Route as AppOrganizationIdIndexRouteImport } from './pages/_app/$organizationId/index'
import { Route as AppOrganizationIdProjectIdIndexRouteImport } from './pages/_app/$organizationId/$projectId/index'
import { Route as AppOrganizationIdChar126MembersRouteImport } from './pages/_app/$organizationId/~/members'
import { Route as AppOrganizationIdProjectIdCollectionsRouteImport } from './pages/_app/$organizationId/$projectId/collections'

const AuthLayoutRoute = AuthLayoutRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppLayoutRoute = AppLayoutRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const AppOrganizationIdIndexRoute = AppOrganizationIdIndexRouteImport.update({
  id: '/$organizationId/',
  path: '/$organizationId/',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppOrganizationIdProjectIdIndexRoute =
  AppOrganizationIdProjectIdIndexRouteImport.update({
    id: '/$organizationId/$projectId/',
    path: '/$organizationId/$projectId/',
    getParentRoute: () => AppLayoutRoute,
  } as any)
const AppOrganizationIdChar126MembersRoute =
  AppOrganizationIdChar126MembersRouteImport.update({
    id: '/$organizationId/~/members',
    path: '/$organizationId/~/members',
    getParentRoute: () => AppLayoutRoute,
  } as any)
const AppOrganizationIdProjectIdCollectionsRoute =
  AppOrganizationIdProjectIdCollectionsRouteImport.update({
    id: '/$organizationId/$projectId/collections',
    path: '/$organizationId/$projectId/collections',
    getParentRoute: () => AppLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/callback': typeof AuthCallbackRoute
  '/sign-in': typeof AuthSignInRoute
  '/': typeof AppIndexRoute
  '/$organizationId': typeof AppOrganizationIdIndexRoute
  '/$organizationId/$projectId/collections': typeof AppOrganizationIdProjectIdCollectionsRoute
  '/$organizationId/~/members': typeof AppOrganizationIdChar126MembersRoute
  '/$organizationId/$projectId': typeof AppOrganizationIdProjectIdIndexRoute
}
export interface FileRoutesByTo {
  '/callback': typeof AuthCallbackRoute
  '/sign-in': typeof AuthSignInRoute
  '/': typeof AppIndexRoute
  '/$organizationId': typeof AppOrganizationIdIndexRoute
  '/$organizationId/$projectId/collections': typeof AppOrganizationIdProjectIdCollectionsRoute
  '/$organizationId/~/members': typeof AppOrganizationIdChar126MembersRoute
  '/$organizationId/$projectId': typeof AppOrganizationIdProjectIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppLayoutRouteWithChildren
  '/_auth': typeof AuthLayoutRouteWithChildren
  '/_auth/callback': typeof AuthCallbackRoute
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_app/': typeof AppIndexRoute
  '/_app/$organizationId/': typeof AppOrganizationIdIndexRoute
  '/_app/$organizationId/$projectId/collections': typeof AppOrganizationIdProjectIdCollectionsRoute
  '/_app/$organizationId/~/members': typeof AppOrganizationIdChar126MembersRoute
  '/_app/$organizationId/$projectId/': typeof AppOrganizationIdProjectIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/callback'
    | '/sign-in'
    | '/'
    | '/$organizationId'
    | '/$organizationId/$projectId/collections'
    | '/$organizationId/~/members'
    | '/$organizationId/$projectId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/callback'
    | '/sign-in'
    | '/'
    | '/$organizationId'
    | '/$organizationId/$projectId/collections'
    | '/$organizationId/~/members'
    | '/$organizationId/$projectId'
  id:
    | '__root__'
    | '/_app'
    | '/_auth'
    | '/_auth/callback'
    | '/_auth/sign-in'
    | '/_app/'
    | '/_app/$organizationId/'
    | '/_app/$organizationId/$projectId/collections'
    | '/_app/$organizationId/~/members'
    | '/_app/$organizationId/$projectId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/_auth/callback': {
      id: '/_auth/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/_app/$organizationId/': {
      id: '/_app/$organizationId/'
      path: '/$organizationId'
      fullPath: '/$organizationId'
      preLoaderRoute: typeof AppOrganizationIdIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_app/$organizationId/$projectId/': {
      id: '/_app/$organizationId/$projectId/'
      path: '/$organizationId/$projectId'
      fullPath: '/$organizationId/$projectId'
      preLoaderRoute: typeof AppOrganizationIdProjectIdIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_app/$organizationId/~/members': {
      id: '/_app/$organizationId/~/members'
      path: '/$organizationId/~/members'
      fullPath: '/$organizationId/~/members'
      preLoaderRoute: typeof AppOrganizationIdChar126MembersRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_app/$organizationId/$projectId/collections': {
      id: '/_app/$organizationId/$projectId/collections'
      path: '/$organizationId/$projectId/collections'
      fullPath: '/$organizationId/$projectId/collections'
      preLoaderRoute: typeof AppOrganizationIdProjectIdCollectionsRouteImport
      parentRoute: typeof AppLayoutRoute
    }
  }
}

interface AppLayoutRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppOrganizationIdIndexRoute: typeof AppOrganizationIdIndexRoute
  AppOrganizationIdProjectIdCollectionsRoute: typeof AppOrganizationIdProjectIdCollectionsRoute
  AppOrganizationIdChar126MembersRoute: typeof AppOrganizationIdChar126MembersRoute
  AppOrganizationIdProjectIdIndexRoute: typeof AppOrganizationIdProjectIdIndexRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppOrganizationIdIndexRoute: AppOrganizationIdIndexRoute,
  AppOrganizationIdProjectIdCollectionsRoute:
    AppOrganizationIdProjectIdCollectionsRoute,
  AppOrganizationIdChar126MembersRoute: AppOrganizationIdChar126MembersRoute,
  AppOrganizationIdProjectIdIndexRoute: AppOrganizationIdProjectIdIndexRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

interface AuthLayoutRouteChildren {
  AuthCallbackRoute: typeof AuthCallbackRoute
  AuthSignInRoute: typeof AuthSignInRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthCallbackRoute: AuthCallbackRoute,
  AuthSignInRoute: AuthSignInRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppLayoutRoute: AppLayoutRouteWithChildren,
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
